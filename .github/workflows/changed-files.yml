name：检查已更改文件的 URL

于：
  推：
  拉请求：

权限：
  #需要结帐代码
  内容：阅读

#这允许后续排队的工作流运行中断/等待先前的运行
并发：
  组：' ${{github.workflow}}@${{github.run_id}} '
  取消进行中: false          # true = 中断, false = 等待

职位：

#注意：tj-actions/changed-files。
#对于推送事件，您需要包含 fetch-depth: 0 | 2 取决于您的用例。
#   0: 检索所有分支和标签的所有历史记录
#   1: 仅检索当前提交（默认情况下）
#   2: 检索直到前一个提交
  获取更改的文件：
    name :获取更改的文件
    运行：ubuntu-latest
    输出：
      获取深度：${{steps.set-params.outputs.fetch-深度}}
      文件：        ${{steps.set-files.outputs.files}}
      文件长度：    ${{steps.set-files.outputs.files-len}}
      矩阵：       ${{steps.set-matrix.outputs.matrix}}
    步骤：
      - name :确定工作流程参数
        id :设置参数
        运行：|
          回声“fetch_深度 = 0”>> $GITHUB_OUTPUT
          if [ "${{ github.event_name }}" == "pull_request" ]; 然后
            回声“fetch_深度 = 0”>> $GITHUB_OUTPUT
          菲
      -名称：结帐
        使用：actions/checkout@v4
        与：
          获取深度：${{steps.set-params.outputs.fetch-深度}}
      - name :获取更改的文件
        id :更改的文件
        使用：tj-actions/changed-files@v40.1.1
        与：
          分隔符：“  ”
          json：正确
      - id :设置文件
        运行：|
          回声“${{steps.changed-files.outputs.all_changed_files}}”\
            | jq --原始输出 '. | 加入（” ”）' \
            | sed -e 's/^/files=/' \
            >> $GITHUB_输出
          回声“${{steps.changed-files.outputs.all_changed_files}}”\
            | jq --原始输出 '. | 长度' \
            | sed -e 's/^/files-len=/' \
            >> $GITHUB_输出
      - id :集合矩阵
        运行：|
          echo "{\"file\":${{steps.changed-files.outputs.all_changed_files }}}" \
            | sed -e 's/^/matrix=/' \
            >> $GITHUB_输出
  检查网址：
    名称：检查@${{matrix.file}}
    如果：${{ fromJSON(needs.get-changed-files.outputs.files-len) > 0 }}
    需求：[获取更改的文件]
    运行：ubuntu-latest
    策略：
      矩阵：${{fromJSON(needs.get-changed-files.outputs.matrix)}}
      最大并行数：10
      快速失败：false
    步骤：
      -名称：结帐
        使用：actions/checkout@v4
        与：
          获取深度：${{ 需要.get-changed-files.outputs.获取深度 }}
      -名称：安装 Ruby v2.6
        使用：ruby/setup-ruby@v1
        与：
          红宝石版本：2.6
      -名称：安装awesome_bot
        运行：|
          宝石安装awesome_bot
      - name : "检查文件的 URL: ${{ matrix.file }} "
        运行：|
          Awesome_bot“${{matrix.file}}”--allow-redirect--allow-dupe--allow-ssl|| 真的;
      -使用：actions/upload-artifact@v3
        与：
          名称：awesomebot-结果
          路径：${{ github.workspace }}/ab-results-*.json


  记者：
    名称：GitHub 报告
    需求：[获取更改的文件，检查网址]
    运行：ubuntu-latest
    步骤：
      - name : Checkout   #以获取本地操作的来源
        使用：actions/checkout@v4
        #下载并解压 job-matrix: check-urls 生成的 ab-results-*.json
      -使用：actions/download-artifact@v3
        与：
          名称：awesomebot-结果
      -名称：生成摘要报告
        使用：./.github/actions/awesomebot -gh-summary-action
        与：
          ab-root : ${{ github.workspace }}
          文件：${{needs.get-changed-files.outputs.files}}
          分隔符：“  ”
          追加标题：${{ true }}
